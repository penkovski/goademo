// Code generated by goa v3.3.1, DO NOT EDIT.
//
// weather service
//
// Command:
// $ goa gen github.com/penkovski/goademo/design

package weather

import (
	"context"
)

// The weather service returns information for a given location.
type Service interface {
	// WeatherQuery implements WeatherQuery.
	WeatherQuery(context.Context, *WeatherQueryRequest) (res *WeatherQueryResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "weather"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"WeatherQuery"}

// WeatherQueryRequest is the payload type of the weather service WeatherQuery
// method.
type WeatherQueryRequest struct {
	// Latitude coordinate of location.
	Lat float64
	// Longitude coordinate of location.
	Lon float64
	// Units of measurement. Possible values are 'standard', 'metric' or 'imperial'.
	Units *string
}

// WeatherQueryResult is the result type of the weather service WeatherQuery
// method.
type WeatherQueryResult struct {
	Temp      float64
	FeelsLike *float64
	Pressure  *int
	WindSpeed *int
}
