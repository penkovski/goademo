// Code generated by goa v3.4.3, DO NOT EDIT.
//
// healthcheck HTTP server types
//
// Command:
// $ goa gen github.com/penkovski/goademo/design

package server

import (
	healthcheck "github.com/penkovski/goademo/gen/healthcheck"
)

// LivenessResponseBody is the type of the "healthcheck" service "liveness"
// endpoint HTTP response body.
type LivenessResponseBody struct {
	Status string `form:"status" json:"status" xml:"status"`
}

// ReadinessResponseBody is the type of the "healthcheck" service "readiness"
// endpoint HTTP response body.
type ReadinessResponseBody struct {
	Status string `form:"status" json:"status" xml:"status"`
}

// ReadinessServiceUnavailableErrorResponseBody is the type of the
// "healthcheck" service "readiness" endpoint HTTP response body for the
// "ServiceUnavailableError" error.
type ReadinessServiceUnavailableErrorResponseBody struct {
	Status string `form:"status" json:"status" xml:"status"`
}

// NewLivenessResponseBody builds the HTTP response body from the result of the
// "liveness" endpoint of the "healthcheck" service.
func NewLivenessResponseBody(res *healthcheck.LivenessResult) *LivenessResponseBody {
	body := &LivenessResponseBody{
		Status: res.Status,
	}
	return body
}

// NewReadinessResponseBody builds the HTTP response body from the result of
// the "readiness" endpoint of the "healthcheck" service.
func NewReadinessResponseBody(res *healthcheck.ReadinessResult) *ReadinessResponseBody {
	body := &ReadinessResponseBody{
		Status: res.Status,
	}
	return body
}

// NewReadinessServiceUnavailableErrorResponseBody builds the HTTP response
// body from the result of the "readiness" endpoint of the "healthcheck"
// service.
func NewReadinessServiceUnavailableErrorResponseBody(res *healthcheck.ServiceUnavailableError) *ReadinessServiceUnavailableErrorResponseBody {
	body := &ReadinessServiceUnavailableErrorResponseBody{
		Status: res.Status,
	}
	return body
}
