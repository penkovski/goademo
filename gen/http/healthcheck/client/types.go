// Code generated by goa v3.4.3, DO NOT EDIT.
//
// healthcheck HTTP client types
//
// Command:
// $ goa gen github.com/penkovski/goademo/design

package client

import (
	healthcheck "github.com/penkovski/goademo/gen/healthcheck"
	goa "goa.design/goa/v3/pkg"
)

// LivenessResponseBody is the type of the "healthcheck" service "liveness"
// endpoint HTTP response body.
type LivenessResponseBody struct {
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// ReadinessResponseBody is the type of the "healthcheck" service "readiness"
// endpoint HTTP response body.
type ReadinessResponseBody struct {
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// ReadinessServiceUnavailableErrorResponseBody is the type of the
// "healthcheck" service "readiness" endpoint HTTP response body for the
// "ServiceUnavailableError" error.
type ReadinessServiceUnavailableErrorResponseBody struct {
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// NewLivenessResultOK builds a "healthcheck" service "liveness" endpoint
// result from a HTTP "OK" response.
func NewLivenessResultOK(body *LivenessResponseBody) *healthcheck.LivenessResult {
	v := &healthcheck.LivenessResult{
		Status: *body.Status,
	}

	return v
}

// NewReadinessResultOK builds a "healthcheck" service "readiness" endpoint
// result from a HTTP "OK" response.
func NewReadinessResultOK(body *ReadinessResponseBody) *healthcheck.ReadinessResult {
	v := &healthcheck.ReadinessResult{
		Status: *body.Status,
	}

	return v
}

// NewReadinessServiceUnavailableError builds a healthcheck service readiness
// endpoint ServiceUnavailableError error.
func NewReadinessServiceUnavailableError(body *ReadinessServiceUnavailableErrorResponseBody) *healthcheck.ServiceUnavailableError {
	v := &healthcheck.ServiceUnavailableError{
		Status: *body.Status,
	}

	return v
}

// ValidateLivenessResponseBody runs the validations defined on
// LivenessResponseBody
func ValidateLivenessResponseBody(body *LivenessResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	return
}

// ValidateReadinessResponseBody runs the validations defined on
// ReadinessResponseBody
func ValidateReadinessResponseBody(body *ReadinessResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	return
}

// ValidateReadinessServiceUnavailableErrorResponseBody runs the validations
// defined on readiness_ServiceUnavailableError_response_body
func ValidateReadinessServiceUnavailableErrorResponseBody(body *ReadinessServiceUnavailableErrorResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	return
}
