// Code generated by goa v3.4.3, DO NOT EDIT.
//
// weather HTTP client CLI support package
//
// Command:
// $ goa gen github.com/penkovski/goademo/design

package client

import (
	"encoding/json"
	"fmt"

	weather "github.com/penkovski/goademo/gen/weather"
)

// BuildWeatherQueryPayload builds the payload for the weather WeatherQuery
// endpoint from CLI flags.
func BuildWeatherQueryPayload(weatherWeatherQueryBody string) (*weather.WeatherQueryRequest, error) {
	var err error
	var body WeatherQueryRequestBody
	{
		err = json.Unmarshal([]byte(weatherWeatherQueryBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"lat\": 51.50853,\n      \"lon\": -0.12574,\n      \"units\": \"metric\"\n   }'")
		}
	}
	v := &weather.WeatherQueryRequest{
		Lat:   body.Lat,
		Lon:   body.Lon,
		Units: body.Units,
	}

	return v, nil
}
